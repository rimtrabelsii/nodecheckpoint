// hello world
console.log("HELLO WORLD");

//baby-steps
var sum = 0;
for (var i = 2; i < process.argv.length; i++) {

  sum += Number(process.argv[i]);
}

console.log(sum)

//filtered-ls
var fs = require('fs')
var path = require('path')

fs.readdir(process.argv[2], function (err, list) {
  list.forEach(function (file) {
    if (path.extname(file) === '.' + process.argv[3])
      console.log(file)
  })
})

//http-client
var http = require('http')

http.get(process.argv[2], function (response) {
  response.setEncoding('utf8')
  response.on('data', console.log)
  response.on('error', console.error)
})

//http-collect
var http = require('http');
var fullString = '';
http.get(process.argv[2], function callback(response) {

    response.on('data', function(data) {
        fullString += data.toString();
    })
    response.on('end', function() {
        console.log(fullString.length);
        console.log(fullString);
    })
})

//make-it-modular
var moduleFile = require('./mymodule.js');

moduleFile(process.argv[2], process.argv[3], function(err, data){
    data.forEach(function(file){
        console.log(file);
    });
});

//myfirst-async-io
var fs = require('fs')
var file = process.argv[2]
//Instead of fs.readFileSync() you will want to use fs.readFile() and instead of using the return value of this method you need to collect the value from a callback function that you pass in as the second argument.
fs.readFile(file, function(err, contents) {
  //fs.readFile(file, 'utf8', callback) can also be used
  var lines = contents.toString().split('\n').length - 1
  console.log(lines)
})

//myfirst-io
var fs = require('fs')

var filename = process.argv[2]
var contents = fs.readFileSync(filename)
var str = contents.toString();
var lines = str.split('\n').length

console.log(lines - 1)

//mymodule
var path = require('path');
var fs = require('fs');

module.exports = function(pathFile, ext, callback){
    ext = '.' + ext;

    fs.readdir(pathFile, function(err, list){
        if (err){
            return callback(err);
        }

        var filtered=[];
        list.forEach(function(file){
            if(path.extname(file) === ext){
                filtered.push(file);
            }
        });
        return callback(null, filtered);
    });
}